/*
 * Copyright 2021 DataCanvas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java-conventions'
    id 'java-library'
}

dependencies {
    annotationProcessor group: 'com.google.auto.service', name: 'auto-service', version: 'auto-service'.v()
    compileOnly group: 'com.google.auto.service', name: 'auto-service', version: 'auto-service'.v()
    compileOnly project(':dingo-store-api')
    implementation group: 'commons-io', name: 'commons-io', version: 'commons-io'.v()
    implementation group: 'io.dingodb', name: 'rocksdbjni', version: 'rocksdb'.v()
    implementation project(':dingo-common')
}

//task fatJar(type: Jar) {
//    classifier 'all'
//    from(
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) },
//    )
//    with jar
//
//    exclude "META-INF/*.SF"
//    exclude "META-INF/*.DSA"
//    exclude "META-INF/*.RSA"
//}
//
//tasks.named("build") { x ->
//    x.finalizedBy("fatJar")
//}
