plugins {
    id 'java'
}

group 'io.dingodb'
version '0.2.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.alipay.sofa', name: 'bolt', version: 'bolt'.v()
    compile group: 'com.alipay.sofa', name: 'jraft-core', version: 'jraft'.v()
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: 'dataformat'.v()
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: 'databind'.v()
    compile group: 'com.lmax', name: 'disruptor', version: 'disruptor'.v()
    compile group: 'commons-io', name: 'commons-io', version: 'commons-io'.v()
    compile group: 'io.protostuff', name: 'protostuff-core', version: 'protostuff'.v()
    compile group: 'io.protostuff', name: 'protostuff-runtime', version: 'protostuff'.v()
    compile group: 'net.openhft', name: 'affinity', version: 'affinity'.v()
    compile group: 'org.apache.commons', name: 'commons-compress', version: 'commons-compress'.v()
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: 'log4j'.v()
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: 'log4j'.v()
    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: 'log4j'.v()
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: 'log4j'.v()
    compile group: 'org.projectlombok', name: 'lombok', version: 'lombok'.v()
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: 'lombok'.v()
    implementation group: 'org.rocksdb', name: 'rocksdbjni', version: 'rocksdb'.v()

    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: 'hamcrest'.v()
    testImplementation group: 'org.mockito', name: 'mockito-all', version: 'mockito'.v()
    testImplementation group: 'org.openjdk.jmh', name: 'jmh-core', version: 'jmh'.v()
    testImplementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: 'jmh'.v()
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: 'junit'.v()
    testRuntimeOnly group:'org.junit.jupiter', name: 'junit-jupiter-engine', version: 'junit'.v()
}

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {
    classifier 'all'
    from(
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) },
    )
    with jar

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

tasks.named("build") { x ->
    x.finalizedBy("fatJar")
}
