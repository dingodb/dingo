/*
 * Copyright 2021 DataCanvas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java-conventions'
    id 'java-library'
    id "com.gorylenko.gradle-git-properties" version "${gradleGitCommitVersion}"
}

dependencies {
    implementation group: 'com.beust', name: 'jcommander', version: 'jcommander'.v()
    implementation group: 'sqlline', name: 'sqlline', version: 'sqlline'.v()
    implementation group: 'org.apache.commons', name: 'commons-csv', version: 'commons-csv'.v()

    implementation project(":dingo-common")
    implementation project(":dingo-calcite")
    implementation project(":dingo-driver")
    implementation project(":dingo-driver-client")
    implementation project(":dingo-net-netty")
    implementation project(":dingo-server:dingo-server-client")
    implementation project(":dingo-server:dingo-server-protocol")
    implementation project(':dingo-server:dingo-server-driver-proxy')
}

task fatJar(type: Jar) {
    classifier 'all'
    from(
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) },
    )
    with jar

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

fatJar.dependsOn([
    ':dingo-driver-client:fatJar',
    ':dingo-server:dingo-server-driver-proxy:jar'
])

tasks.named("build") { x ->
    x.finalizedBy("fatJar")
}
