/*
 * Copyright 2021 DataCanvas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'application'
    id 'java-conventions'
}

application {
    mainClassName = 'io.github.datacanvasio.dingo.cli.SetUp'
}


dependencies {
    implementation project(":dingo-server")
    implementation project(":dingo-net-netty")
    implementation project(":dingo-common")
    implementation project(":dingo-calcite")
    implementation group: 'org.apache.helix', name: 'helix-core', version: 'helix'.v()
    implementation group: 'com.beust', name: 'jcommander', version: 'jcommander'.v()
    implementation group: 'sqlline', name: 'sqlline', version: 'sqlline'.v()
    implementation group: 'org.apache.commons', name: 'commons-csv', version: 'commons-csv'.v()
    implementation project(":dingo-kvstore-raft")
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'io.github.datacanvasio.dingo.cli.SetUp'
    }
    classifier 'all'
    from(
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) },
    )
    with jar

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

task copyDepends(type: Copy) {
    dependsOn(fatJar, ':dingo-kvstore-raft:fatJar')

    from(layout.projectDirectory) {
        include "conf/**"
        include "bin/**"
    }
    into layout.projectDirectory.dir("dingo")

    from(layout.buildDirectory) {
        include("libs/dingo-cli-*-all.jar")
    }
    into layout.projectDirectory.dir("dingo")

    from(project(':dingo-kvstore-raft').layout.buildDirectory) {
        include('libs/dingo-kvstore-raft-*-all.jar')
    }
    into layout.projectDirectory.dir("dingo")

    rename { fileName ->
        fileName.replace("-$project.version", "")
    }

}

tasks.register('packageDistribution', Zip) {
    dependsOn(copyDepends)
    archiveFileName = "dingo.zip"
    destinationDirectory = layout.buildDirectory.dir('distributions')
    from layout.projectDirectory.dir("dingo")
}

copyDepends.mustRunAfter fatJar
packageDistribution.mustRunAfter(copyDepends)

tasks.named("build") { x ->
    x.finalizedBy("packageDistribution")
}

/**
 * do CleanUp to delete the release `dingo.zip` when run `gradlew clean`.
 */
task cleanUp(type: Delete) {
    delete layout.projectDirectory.dir("dingo")
}
tasks.clean.dependsOn(tasks.cleanUp)
